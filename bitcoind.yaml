---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: bitcoind-rpc-pass
  namespace: default
spec:
  encryptedData:
    bitcoind-rpc-pass: AgBMr3ofeebEicwYWroiBruyqzhQp6u+zTuyTN34Ay6MzSOZFTHKRgsup4QGrszHb6ts+kCMKTk5Kjjqe4jzBxaLRNQKD/yn2n4/aFHprGwXeIQhTdJHWsA62A6p41lOTNuv5wGBCIh66JnL6nb9hu2cHaW2QslY4AIBmQwmFTuA63Qiw18Zcti8Ng68ncjXoutUVw4lp0oX3pXUHW7MUAVN91uyOj+helAL29t0oaAzJBM2rzx1V8znKgTvpXPG0l8A7dAk0y6Wnh61Xs+shO/ZfRoFesLZ7cTcyBLjZISEdrdXAIRm60/IZU4iBdV3tYKeZit6I5v8quyhZFrGaFUfJSVRozAaikKIFKVIsmi1cPl8V2UP536VKDCoGTJS41ekK9jjIUbTFNigXKBpk7419JEbaPPdhk5EGgWjEK1DBRV+0fSTEcdkYW4yeWa1KoO/8FYVpCbaGncySqqvsQPCLjFDH0tqb7x78wtDLFYvBtqstsTMaWjy/0+KJmgIE6foH51TEmVT/WIxx96V36QPEdN1p0+QGPAgI3UEmMuuIE7vYdOKSjnxF1Q6nkEee2mAx5gqOOl9Q3dD2dGxjC59ibFHYUUwRFgfv7a1hV4DqilG5nil2CsSfpqrTu0ci2CG9Obj8kKRVF2LxB62CDjt0tFaul3dTyoCyEfm2ySxV6oeWmEqjVO5sFcTVpWnaERexsMEKW982PbXdNsqgqgLnFzmpUksQKZQdnu4lxdOuHth2hEEocGP
  template:
    metadata:
      creationTimestamp: null
      name: bitcoind-rpc-pass
      namespace: default
---
apiVersion: zfs.openebs.io/v1alpha1
kind: ZFSVolume
metadata:
  name: bitcoind  # should be same as zfs volume name
  namespace: openebs
spec:
  capacity: "1099511627776" # size of the volume in bytes
  fsType: zfs
  ownerNodeID: rodan # should be the nodename where ZPOOL is running
  poolName: datapool/k3s # poolname where the volume is present
  volumeType: DATASET # whether it is a DATASET or ZVOL
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: bitcoind # some unique name
spec:
  accessModes:
  - ReadWriteOnce
  capacity:
    storage: 1Ti # size of the volume
  claimRef:
    apiVersion: v1
    kind: PersistentVolumeClaim
    name: bitcoind-pvc # name of pvc which can claim this PV
    namespace: default # namespace for the pvc
  csi:
    driver: zfs.csi.openebs.io
    fsType: zfs
    volumeAttributes:
      openebs.io/poolname: datapool/k3s # change the pool name accordingly
    volumeHandle: bitcoind # This should be same as the zfs volume name
  nodeAffinity:
    required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: kubernetes.io/hostname
          operator: In
          values:
          - rodan # change the hostname where volume is present
  persistentVolumeReclaimPolicy: Retain
  storageClassName: openebs-zfspv
  volumeMode: Filesystem
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: bitcoind-pvc
spec:
  storageClassName: openebs-zfspv
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Ti
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: bitcoind
  labels:
    app: bitcoind
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: bitcoind
  template:
    metadata:
      labels:
        app: bitcoind
    spec:
      containers:
      - name: bitcoind
        image: "bitcoind:23.0"
        args: [
          '-rpcuser=bitcoinrpc',
          '-rpcpassword=$(RPC_PASSWORD)',
          '-disablewallet=1',
          '-printtoconsole=1',
          '-txindex=1',
          '-rpcbind=0.0.0.0:8332',
          '-rpcallowip=10.0.0.0/8'
        ]
        env:
        - name: RPC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bitcoind-rpc-pass
              key: bitcoind-rpc-pass
        ports:
        - name: bitcoind-p2p
          containerPort: 8333
        - name: bitcoind-rpc
          containerPort: 8332
        volumeMounts: 
        - name: "bitcoind-data"
          mountPath: /bitcoin/.bitcoin
      - name: prometheus-exporter
        image: bitcoin-prometheus-exporter:0.7.0
        env:
        - name: BITCOIN_RPC_HOST
          value: localhost
        - name: BITCOIN_RPC_USER
          value: bitcoinrpc
        - name: BITCOIN_RPC_PASSWORD
          valueFrom:
            secretKeyRef:
              name: bitcoind-rpc-pass
              key: bitcoind-rpc-pass
        - name: REFRESH_SECONDS
          value: "5"
        - name: LOG_LEVEL
          value: INFO
        ports:
        - name: prometheus-port
          containerPort: 9332
      volumes:
      - name: bitcoind-data
        persistentVolumeClaim:
          claimName: bitcoind-pvc
      
---
apiVersion: v1
kind: Service
metadata:
  name: bitcoind
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
  - name: bitcoind-p2p
    port: 8333
    targetPort: bitcoind-p2p
  - name: bitcoind-rpc
    port: 8332
    targetPort: bitcoind-rpc
  - name: prometheus-port
    port: 9332
    targetPort: prometheus-port
  selector:
    app: bitcoind

