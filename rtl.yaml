---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: rtl
  namespace: default
spec:
  encryptedData:
    password: AgAtLQoajAn55B9Dp/QdlJaPeXdDijvAoFJTHZkgaJi8dnUfAfxMAVhAV5i7/UoZexbdPrPKuRZaEixB7uCk1ij0wbPf6IyXXTGaCCCNI/0qTln9hpWIRnAJeLKc03ZVtllUFHrngPUSKWW9pQPMVfDH/RF4W6IWwzNY45rlx43KSF04h+ix5QWzC9PP7NjplGFc3HaD+p65bm2A8MASQ8VhQhIGlgw42HdAJr5NjjxliXplr5I1G7i6UtbmLfsS6LbdYR0CxpctuhHrK6iYSUdvuACM8jOIcweREbY1uZK7bS27SUBqXUEkrbEOQYz0Y4PzbyfTii4uQQXCK5nNFJ8PWzAAQ9CI/07YlVBw0hv4iJH6KbwdK7yyIO2che7ahc0+8iUdaYWS+zvcn1n5ULB0xbhRTOlCFhDsukHRuynPu+rUT7qCBmboJBJ7UEh+cLX2xcRei0go946uQzx3lcvNlDe4VwDOEMHoaOiwHxx2HMQ5wENNhP27ju/WrMD2+cxZkmGZ+WfCoCxoeLOY4k4pkzN1A4xOh3vSmXeevyNg0g0yUQO24Y4oxZd5z6jyG52ETPxfp18vES94HZP5fgrKak2gDrYiYbk/CUUZvaJSi3YtkaV7UUdNAt8hcCJPmaT4C43QDduESJvFaChoxkmNf4FHba1jHkNYJG38tVHBbtYw1SHtlikgT8QrjX346rdox3cVHIg2txZaeTriACWjXtbsdV5LvTWYKZyhitPHsQ==
  template:
    metadata:
      creationTimestamp: null
      name: rtl
      namespace: default
---
apiVersion: bitnami.com/v1alpha1
kind: SealedSecret
metadata:
  creationTimestamp: null
  name: cln-macaroon
  namespace: default
spec:
  encryptedData:
    access.macaroon: AgAesz3IiBK5ATwhjE9ZKoievT4x998/UDphSr6veBrq2rJ6wjygAQQZwnj6EJflTe4z4x8KEQxRwxldd/5fiobO3U3+2EssgxUZygKa1bM6M2kOp732BsqswKWRu+WZsxucua3t7qCzToDEVs46B2nk7YwzAZaBHp7wRB9iozxqqlswpJ4wAVIeUxiMVJhSBGrQ/nIu4/WOo1MjgO7foCzg88G7guaN3cxo2s1PxrmZfUMVhjNweZjMK7CrWk4yH9+q6Lftox5ZeoBMRb3AF9Dtjh8C8C0pO+kvxfYRo/vFkolwwpuVm7K9rarCSVmgz6h2QggBMMPZWj/CMn8+IyYTHF82GO4gXHqYGxlwwGrji1w64F+NHzcqM8eXcRJj5ROWXWPD0w5CNP5vNDY/ToQCylxM0WCgWSKVjBag768xlcx1sw8c50JkpLCzhzXU5jG8K4JTuMDMRV0wjpEoEZZTTG9Bgv+XX50Hgdsr6YTzoD9isZNIjuUB6hGpgWE1Cu86epE2+QzuFOyxGlZFH2CG2SBLalJVqc1WttQOqD7bVpUwh6tkH6tG2Yl0G5YfkJ1we9CheVuj0xCGGKUSO0BrOVZIFkI8E7WiF5LMhfr+yk7BjEktIhKcGUopmSXh7azdQyBxX1QYnbkYkUbPhrsugOufABi67RhkZyKLZmLem7pR0/qo+9ggfnCA+uK02Uq6eZOwbG3NBOsn2/m9w+vmNkcweTBjigm6+8hNldihxLMfJxIB2H5XOYplLxW2hixPznbmWELdCu9fkEOcT/gm/JdWUr2UCbMFvFdMK05t4WgT5gK0FZtvLu/1kS72ARm3CTKL3t6zWe7eXsakbeoq7kA=
  template:
    metadata:
      creationTimestamp: null
      name: cln-macaroon
      namespace: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rtl
  labels:
    app: rtl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rtl
  template:
    metadata:
      labels:
        app: rtl
    spec:
      containers:
      - name: rtl
        image: rtl:peerswap
        env:
        - name: APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: rtl
              key: password
        - name: RTL_CONFIG_PATH
          value: /rtl-config
        - name: ENABLE_PEERSWAP
          value: "true"
        ports:
        - name: web
          containerPort: 3010
        volumeMounts: 
        - name: macaroon
          readOnly: true
          mountPath: /rest-certs
        - name: config
          mountPath: /rtl-config
      volumes:
      - name: macaroon
        secret:
          secretName: cln-macaroon
      - name: config
        configMap:
          name: rtl
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: rtl
data:
  RTL-Config.json: |
    {
      "port": "3010",
      "SSO": {
        "rtlSSO": 0,
        "rtlCookiePath": "",
        "logoutRedirectLink": ""
      },
      "nodes": [
        {
          "index": 1,
          "lnNode": "Core Lightning",
          "lnImplementation": "CLN",
          "Authentication": {
            "macaroonPath": "/rest-certs",
            "configPath": ""
          },
          "Settings": {
            "userPersona": "OPERATOR",
            "themeMode": "DAY",
            "themeColor": "PURPLE",
            "bitcoindConfigPath": "",
            "logLevel": "DEBUG",
            "fiatConversion": false,
            "lnServerUrl": "http://clightning-rest:3001",
            "enablePeerswap": true
          }
        }
      ]
    }
 
---
apiVersion: v1
kind: Service
metadata:
  name: rtl
spec:
  ports:
  - name: web
    port: 80
    targetPort: web
  selector:
    app: rtl
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rtl-ingress
  annotations:
    traefik.ingress.kubernetes.io/router.tls: "true"
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
spec:
  tls:
  - hosts:
      - rtl.bitbeard.net
    secretName: wildcard-cert-prod
  rules:
    - host: rtl.bitbeard.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name:  rtl
                port:
                  number: 80
